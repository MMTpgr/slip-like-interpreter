;;; Quelques exemples.                  -*- mode: lisp-data; coding: utf-8 -*-


2                                                                        ; ⇝ 2
+                                                                        ; ⇝ <primitive>
(* 2 3)                                                                  ; ⇝ 6

(- (+ 1000 (/ (* (- 68 32) 
  5) 
9)) 
(- 0 (* 2 10)
))                                                                       ; ⇝ 1040

(def ((x 10)                                                         
 (y 5)
 (z 10)
 (w 10))
(/ (+ (* (+ w z) 
    z)) 
  x) 
y)                                                                       ; ⇝ 42

(seq 1 2 3 0 5 2)                                                        ; ⇝ [1 2 3 0 5 2]

(seq 1)                                                                  ; ⇝ [1]

(seq)                                                                    ; ⇝ []

(node 5 3)                                                               ; ⇝ [5 3]

(node 5  )                                                               ; ⇝ [5]

(node)                                                                   ; ⇝ []


(proc (x) x)                                                             ; ⇝ <fonction>

((proc (x) x) 123)                                                                     ; ⇝ 123

(((((proc (x) (proc (y) (proc (z) (proc (w) 
        (- 6 (+ (* x z) y)))) )) 
      3) 
    5) 
  7) 
0)                                                                       ; ↝ -20

(((proc (x) (proc (y) (* x y))) 3) 5)                                                                      ; ↝ 15

 
(def ((a -2)                                                         
 ((add2 x)(+ x 2))
 ((div2 w)(/ w 2))
 ((sous2 z)(- z 2)))
 (+ (add2 a) (sous2 a)) )                                                ; ⇝ -4


(case (null) (null 1) (node 1:(null)) (even (null)))                     ; ⇝ 1

(def ( ((even xs)                                                    
  (case xs (null 1) ((node x xs) (odd xs))) )
((odd xs)
  (case xs (null 0) ((node x xs) (even xs)))))
(odd (seq 2 3 4)))                                                       ; ⇝ 0


